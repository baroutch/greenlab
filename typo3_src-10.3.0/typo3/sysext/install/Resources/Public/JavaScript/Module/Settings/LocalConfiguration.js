/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
define(["require","exports","jquery","../AbstractInteractableModule","TYPO3/CMS/Backend/Modal","TYPO3/CMS/Backend/Notification","TYPO3/CMS/Core/Ajax/AjaxRequest","../../Router","bootstrap","../../Renderable/Clearable"],(function(e,t,a,s,r,o,n,i){"use strict";class l extends s.AbstractInteractableModule{constructor(){super(...arguments),this.selectorToggleAllTrigger=".t3js-localConfiguration-toggleAll",this.selectorWriteTrigger=".t3js-localConfiguration-write",this.selectorSearchTrigger=".t3js-localConfiguration-search"}initialize(e){this.currentModal=e,this.getContent(),e.on("click",this.selectorWriteTrigger,()=>{this.write()}),e.on("click",this.selectorToggleAllTrigger,()=>{const e=this.getModalBody().find(".panel-collapse"),t=e.eq(0).hasClass("in")?"hide":"show";e.collapse(t)}),jQuery.expr[":"].contains=jQuery.expr.createPseudo(e=>t=>jQuery(t).text().toUpperCase().includes(e.toUpperCase())),e.on("keydown",t=>{const a=e.find(this.selectorSearchTrigger);t.ctrlKey||t.metaKey?"f"===String.fromCharCode(t.which).toLowerCase()&&(t.preventDefault(),a.focus()):27===t.keyCode&&(t.preventDefault(),a.val("").focus())}),e.on("keyup",this.selectorSearchTrigger,t=>{const s=a(t.target).val(),r=e.find(this.selectorSearchTrigger);e.find("div.item").each((e,t)=>{const r=a(t);a(":contains("+s+")",r).length>0||a('input[value*="'+s+'"]',r).length>0?r.removeClass("hidden").addClass("searchhit"):r.removeClass("searchhit").addClass("hidden")}),e.find(".searchhit").parent().collapse("show");const o=r.get(0);o.clearable(),o.focus()})}getContent(){const e=this.getModalBody();new n(i.getUrl("localConfigurationGetContent")).get({cache:"no-cache"}).then(async t=>{const a=await t.resolve();!0===a.success&&(Array.isArray(a.status)&&a.status.forEach(e=>{o.success(e.title,e.message)}),e.html(a.html),r.setButtons(a.buttons))},t=>{i.handleAjaxError(t,e)})}write(){const e=this.getModalBody(),t=this.getModuleContent().data("local-configuration-write-token"),s={};this.findInModal(".t3js-localConfiguration-pathValue").each((e,t)=>{const r=a(t);"checkbox"===r.attr("type")?t.checked?s[r.data("path")]="1":s[r.data("path")]="0":s[r.data("path")]=r.val()}),new n(i.getUrl()).post({install:{action:"localConfigurationWrite",token:t,configurationValues:s}}).then(async e=>{const t=await e.resolve();!0===t.success&&Array.isArray(t.status)?t.status.forEach(e=>{o.showMessage(e.title,e.message,e.severity)}):o.error("Something went wrong")},t=>{i.handleAjaxError(t,e)})}}return new l}));